user                 nginx;
pid                  /var/run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;
include              /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 65535;
}

http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   16M;
    keepalive_timeout      65;

	include                mime.types;
    default_type           application/octet-stream;

    log_format  main    '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent"';

    access_log             /dev/null main;
    error_log              /dev/null warn;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    gzip off;

    proxy_http_version                 1.1;
    proxy_cache_bypass                 $http_upgrade;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host  $host;
    proxy_set_header X-Forwarded-Port  $server_port;
    proxy_connect_timeout              60s;
    proxy_send_timeout                 60s;
    proxy_read_timeout                 60s;
    proxy_ignore_headers               Vary;
    proxy_ignore_headers               Cache-Control;
    proxy_redirect                     off;
    proxy_ssl_server_name              off;

    upstream api {
        server api:1111;
    }

    upstream frontend {
        server frontend:3333;
    }

    upstream cdn {
        server cdn.clank.so:443;
    }

    # API SUBDOMAIN
    server {
        listen 80;
        server_name api.clank.localhost;

        location / {
            proxy_pass http://api;
        }
    }

    # WWW SUBDOMAIN
	server {
        listen 80;
        server_name www.clank.localhost;

        location / {
            return 301 http://clank.localhost$request_uri;
        }
    }

    # CDN SUBDOMAIN
    server {
        listen 80;
        server_name cdn.clank.localhost;

        location / {
            proxy_set_header Host cdn.clank.so;
            proxy_pass https://cdn;
        }
    }

    # DEFAULT SUBDOMAIN
	server {
        listen 80 default_server;
        server_name _;

        location / {
            return 404;
        }
    }

    # ROOT DOMAIN
	server {
        listen 80;
        server_name clank.localhost;

        location / {
            proxy_pass http://frontend;
        }
    }
}
