version: "3"
services:
  postgres:
    image: pgvector/pgvector:pg16
    env_file: ./.env
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./postgres-init.sh:/docker-entrypoint-initdb.d/postgres-init.sh
      - ./postgres-seed.sql:/postgres-seed.sql
      - postgres:/var/lib/postgres/data

  redis:
    image: redis:7-alpine
    env_file: ./.env
    command: "redis-server --requirepass ${REDIS_PASSWORD} --maxmemory ${REDIS_MAXMEMORY} --maxmemory-policy ${REDIS_MAXMEMORY_POLICY}"
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis:/var/lib/redis/data

  dns:
    image: nginx:1.25-alpine
    env_file: ./.env
    depends_on:
      - api
      - frontend
    links:
      - api:api
      - frontend:frontend
    ports:
      - "127.0.0.1:80:80"
    volumes:
      - ./dns.conf:/etc/nginx/nginx.conf

  api:
    build:
      context: ../../backend
      dockerfile: ../infra/dev/api.Dockerfile
    env_file: ./.env
    depends_on:
      - postgres
      - redis
      - worker
      - engine
    links:
      - postgres:postgres
      - redis:redis
      - worker:worker
      - engine:engine
    ports:
      - "127.0.0.1:1111:1111"
      - "127.0.0.1:1113:1113"
    volumes:
      - ../../backend:/app

  worker:
    build:
      context: ../../backend
      dockerfile: ../infra/dev/worker.Dockerfile
    env_file: ./.env
    depends_on:
      - postgres
      - redis
    links:
      - postgres:postgres
      - redis:redis
    ports:
      - "127.0.0.1:1112:1112"
    volumes:
      - ../../backend:/app

  cli:
    build:
      context: ../../backend
      dockerfile: ../infra/dev/cli.Dockerfile
    env_file: ./.env
    depends_on:
      - postgres
      - redis
    links:
      - postgres:postgres
      - redis:redis
    volumes:
      - ../../backend:/app

  engine:
    build:
      context: ../../engine
      dockerfile: ../infra/dev/engine.Dockerfile
    env_file: ./.env
    ports:
      - "127.0.0.1:2222:2222"
      - "127.0.0.1:2223:2223"
    volumes:
      - ../../engine/src:/app/src

  frontend:
    build:
      context: ../../frontend
      dockerfile: ../infra/dev/frontend.Dockerfile
    env_file: ./.env
    depends_on:
      - api
    links:
      - api:api
    ports:
      - "127.0.0.1:3333:3333"
    volumes:
      - ../../frontend/src:/app/src
      - ../../frontend/static:/app/static

  pgadmin:
    image: neoxelox/pgadmin4:latest
    profiles:
      - extra
    env_file: ./.env
    depends_on:
      - postgres
    links:
      - postgres:postgres
    ports:
      - "127.0.0.1:5433:80"
    volumes:
      - ./pgadmin4.json:/pgadmin4/config.json
      - pgadmin:/root/.pgadmin

  redisinsight:
    image: oblakstudio/redisinsight:2.3
    profiles:
      - extra
    env_file: ./.env
    depends_on:
      - redis
    links:
      - redis:redis
    ports:
      - "127.0.0.1:6380:5000"
    volumes:
      - redisinsight:/db

volumes:
  postgres:
  pgadmin:
  redis:
  redisinsight:
