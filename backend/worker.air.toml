# Working directory
root = "."
tmp_dir = ".air"

[build]
# Just plain old shell command. You could use `make` as well.
cmd = "go build -o ./.air/worker ./cmd/worker/*.go"
# Binary file yields from `cmd`.
bin = "./.air/worker"
# Customize binary.
full_bin = "./.air/worker"

# Watch these filename extensions.
include_ext = ["go", "tpl", "tmpl", "templ", "html", "css", "js", "json", "yaml", "sql"]
# Watch these directories if you specified.
include_dir = ["assets", "cmd/worker", "locales", "migrations", "pkg", "templates"]
# Ignore these filename extensions or directories.
exclude_dir = []
# Exclude specific regular expressions.
exclude_regex = ["_test\\.go"]

# Exclude unchanged files.
exclude_unchanged = true
# Follow symlink for directories
follow_symlink = true
# This log file places in your tmp_dir.
log = "worker.air.log"
# It's not necessary to trigger build each time file changes if it's too frequent.
delay = 1000 # ms
# Stop running old binary when build errors occur.
stop_on_error = true
# Send Interrupt signal before killing process (windows does not support this feature)
send_interrupt = true
# Delay after sending Interrupt signal
kill_delay = 5000 # ms

[log]
# Show log time
time = false
# Only show main log (silences watcher, build, runner)
main_only = true

[color]
# Customize each part's color. If no color found, use the raw app log.
main = "magenta"
watcher = "cyan"
build = "yellow"
runner = "green"

[misc]
# Delete tmp directory on exit
clean_on_exit = true
